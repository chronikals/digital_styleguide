<!doctype html>
<html lang="en">
<head>
	<!--#include file="0_includes/head.html" -->
</head>
<body class="introPage">
<!--#include file="0_includes/top-menu.html" -->
<div class="container-fluid">
	<div class="row">
		<div class="col-sm-2 sidebar">
			<ul class="nav nav-sidebar hidden-xs hidden-sm affix">
				<li><a href="0101_design_principles.shtml">Design principles</a></li>
				<li><a href="0102_the_visual_concept_at_a_glance.shtml">The visual concept at a glance</a></li>
				<li><a href="0103_abb_user_experience.shtml">ABB's user experience</a></li>
				<li><a href="0201_the_abb_bar.shtml">The ABB bar</a></li>
				<li><a href="0202_navigation_principles.shtml">Navigation principles</a></li>
				<li><a class="active" href="0203_layout_and_grid.shtml">Layout and grid</a></li>
				<li><a href="0204_responsive_design.shtml">Responsive design</a></li>
			</ul>
		</div>
		<div class="col-sm-10" main>
				<h1 id="Framework">Layout and grid</h1>
				<section>
					<div class="intro">
						<p>The term layout refers to the arrangement of visual elements on a page or screen.</p>
						<p>A layout establishes a relationship between various elements on a page. ABB delivers software that aims to provide efficient workflows in complex and data-heavy domains. Such applications will experience great benefits when information is carefully structured and laid out. Layout principles provide an underlying guidance that helps ensure an organized, efficient and user-friendly system.</p>
					</div>
					<div class="colGroup">
						<div>
							<img src="../content/0layout/6.png" alt="" />
						</div>
					</div>
				</section>
				<section>
					<h2>Basic layout principles</h2>
					<article>						
						<h3>Hierarchy</h3>
						<p>A visual hierarchy influences the order in which the human eye perceives what it sees. Size and color can help to highlight objects.</p>
						<div class="colGroup">
							<div>
								<img src="../content/0layout/7.png" alt="" />
								<span class="do"></span>
							</div>
						</div>
					</article>
					<article>						
						<h3>Balance</h3>
						<p>A balanced layout enhances readability, can guide the user through a workflow and can help the user to focus on the most important information on the screen. Unbalanced and disorganized interfaces can make your interface feel complex and cluttered, even with the same amount of information.</p>
						<div class="colGroup">
							<div>
								<img src="../content/0layout/8.png" alt="" />
								<span class="do"></span>
							</div>
							<div>
								<img src="../content/0layout/9.png" alt="" />
								<span class="dont"></span>
							</div>
						</div>
					</article>
					<article>						
						<h3>Intuitive</h3>
						<p>Layouts should follow a regular reading flow from top to bottom, left to right.</p>
						<div class="colGroup">
							<div>
								<img src="../content/0layout/10.png" alt="" />
							</div>
						</div>
					</article>
					<article>						
						<h3>Simple</h3>
						<p>Donâ€™t overcomplicate the interface for the user. Prioritize the information/functions that is displayed. Hide less important information, and show only what is relevant to the current view and context.</p>
						<div class="colGroup">
							<div>
								<img src="../content/0layout/11.png" alt="" />
								<span class="do"></span>
							</div>
							<div>
								<img src="../content/0layout/12.png" alt="" />
								<span class="dont"></span>
							</div>
						</div>
					</article>					
				</section>
				<section>
					<h2>Grid</h2>
					<div class="intro">
						<p>The goal of using grids is to bring order, structure and consistency to a layout, and to enable efficient placement of content. Grids are also crucial for designing responsive applications.</p>
						<p>Pixel-perfect alignment of elements throughout the interface make it appear less cluttered, and easier to comprehend for the user.</p>
						<p>As can be seen in the illustration, the grid is a support mechanism not a straitjacket. Other concerns, such as even spacing between controls and avoiding unnatural spacing between UI elements should also be taken into consideration.</p>
					</div>
					<figure class="wide">
						<img src="../content/2016-01-17_Grid/Artboard_9.png" alt="" />
					</figure>					
				</section>
				<section>
					<h2>Base structure</h2>
					<div class="intro">
						<p>It is recommended that all user interfaces are based on a grid. It is not critical that all applications use the exact same grid. Below are some examples based on a grid layout with fixed columns. The number of columns is defined by screen size and resolution. </p>
					</div>
					<article>
						<h3>Grid</h3>
						<p>Establishing a column grid makes it easier to structure content. This example has a resolution of 1600x900 px, and is divided into 12 columns.</p>
						<p>Example grid calculator: <a href="http://www.gridcalculator.dk">gridcalculator.dk</a></p>
						<div class="colGroup">
							<div>
								<img src="../content/0layout/13.png" alt="" />								
							</div>
						</div>
					</article>
					<article>
						<h3>Inner margins</h3>
						<p>Inner margins create white space between the interface elements, to help separate them from each other and create a tidy layout.</p>
						<div class="colGroup">
							<div>
								<img src="../content/0layout/14.png" alt="" />
							</div>
						</div>
					</article>
					<article>					
						<h3>Outer margins</h3>
						<p>Outer margins create white space around the main content to ensure it has enough space from the edge of screen.</p>					
						<div class="colGroup">
							<div>
								<img src="../content/0layout/15.png" alt="" />
							</div>
						</div>						
					</article>

				</section>
				<section>
					<h2>Modularity</h2>
					<div class="intro">
						<p>A well-thought-out grid allows for modular and flexible content layout. Individual elements can span one or multiple columns of the grid, or span the entire content area.</p>
					</div>
					<article>
						<h3>Content section widths</h3>
						<p>The grid is flexible and can be used to create layouts divided in 2, 3, 4 and 6 sections evenly. This example uses a grid divided in 12 columns. </p>				
						<div class="colGroup">
							<div>
								<img src="../content/0layout/17.png" alt="" />
							</div>
						</div>
					</article>
					<article class="wide">
						<h3>Combining content section widths</h3>
						<p>The grid can also be used to create layouts that combine different section widths, which results in several layout combinations.</p>
						<img src="../content/0layout/16.png" alt="" width="765" />
					</article>
				</section>
		</div>
	</div>
</div>
<footer>
	<!--#include file="0_includes/footer.html" -->
</footer>
<!--#include file="0_includes/bodyendlinks.html" -->
</body>
</html>